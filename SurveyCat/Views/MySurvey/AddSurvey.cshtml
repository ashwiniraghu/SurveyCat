@model SurveyCat.Models.SurveyViewModel

@{
    ViewBag.Title = "AddSurvey";

}

@*<h4>Add Survey</h4>
<hr />*@
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>


@Html.AntiForgeryToken()

<div class="panel panel-body">
    <div class="panel-heading">
        <h3 class="panel-title">Add Survey</h3>
    </div>
    <div class=" panel panel-body">
        <div class="col-md-9">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.survey.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.survey.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.survey.name, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.survey.startdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.survey.startdate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.survey.startdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.survey.enddate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.survey.enddate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.survey.enddate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.survey.Questionnaires, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(model => model.questionnaire.QAID)
                @Html.EditorFor(model => model.questionnaire.Name, new { htmlAttributes = new { @class = "form-control" } })
                @*<input class="form-control" id="searchInput" />*@
                @*<button class="btn btn-success" id="addQuestionnairetoSurvey">AddQuestionnairetoSurvey</button>*@
            </div>
            <div class="col-md-10">
                <table class="table table-striped" id="mytable">
                    <tr>
                        <th>Name</th>
                        <th>Comment</th>
                        <th></th>
                    </tr>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model.questionnaires)
                            {
                                //id = "row_@item.QAID"
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.Comment</td>
                                    @*<td><a href="#" class="btn btn-danger" onclick="ConfirmDelete(@item.QAID)"><i class="glyphicon glyphicon-trash"></i></a></td>*@
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
  
        <div class="col-md-12">
            <div class="container" style="width:65%;margin-top:2%">
                <input type="submit" value="Save" class="btn btn-success pull-right" />
            </div>
        </div>
        </div>
    </div>
    </div>
<div class="col-md-12">
    <div class="container" style="width:65%;margin-top:2%">
        <a href="#" class="btn btn-primary" data-toggle="modal" data-target="#AddParticipantsmodel">Add Participants</a>
        <div class="modal" id="AddParticipantsmodel">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h3 class="modal-title">Participants List</h3>

                    </div>
                    <div class="modal-body">
                        <form id="myForm">
                            @Html.TextBoxFor(model => model.User.FName, new { @class = "form-control", @placeholder = "First Name" })

                            @Html.TextBoxFor(model => model.User.LName, new { @class = "form-control", @placeholder = "Last Name" })

                            @Html.TextBoxFor(model => model.User.Email, new { @class = "form-control", @placeholder = "Email" })

                            @*  <input type="reset" value="AddUser" class="btn btn-success" id="btnAdd" />*@
                            @*@Html.TextBoxFor(model => model.User.displayName, new { @class = "form-control", @placeholder = "First Name" })*@
                        </form>
                        @*<div style="text-align:center;display:none" id="loaderDiv">
                                <img src="~/Content/themes/base/images/ui-icons_222222_256x240.png" width="150"/>
                            </div>*@
                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        <a href="#" class="btn btn-success" id="btnSubmit">Submit</a>
                        @*<input type="reset" value="Submit" class="btn btn-success" id="btnSubmit" />*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <table class="table table-striped" id="myUsers">
            <tr>
                <th>FirstName</th>
                <th>LastName</th>
                <th>Email</th>
                <th></th>
            </tr>
            <tbody>
                @if (Model != null)
                {
                    foreach (var item in Model.Userslist)
                    {
                        //id = "row_@item.QAID"
                <tr>
                    <td>@item.FName</td>
                    <td>@item.LName</td>
                    <td>@item.Email</td>
                    @*<td><a href="#" class="btn btn-danger" onclick="ConfirmDelete(@item.QAID)"><i class="glyphicon glyphicon-trash"></i></a></td>*@
                </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

    <div class="col-md-10">
        <div class="container" style="width:65%;margin-top:2%">
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>

    <script>
    $(document).ready(function () {
        $("#btnSubmit").click(function (e) {
            var myformdata = $("#myForm").serialize();
            $("#AddParticipantsmodel").removeClass("in");
            $(".modal-backdrop").remove();
            $("#AddParticipantsmodel").modal('hide');
           // window.location.href = window.location.href;
            
                    //var newElement = '<a href="#" class="btn btn-danger" ><i class="glyphicon glyphicon-trash"></i></a>';
            var newElement = '<a href="#" class="btn btn-danger" id="deleteUserButton"><i class="glyphicon glyphicon-trash"></i></a>';
                    $('#myUsers').append(
                        $('<tr></tr>').append(
                            $('<td></td>').html(myformdata),
                            $('<td></td>').html(myformdata),
                            $('<td></td>').html(myformdata),
                            $('<td></td>').html(newElement),
                            $('<td></td>').html()
                        )
            )
            e.stopPropagation();
            //$.ajax({
            //    type: "POST",
            //    url: "/MySurvey/AddParticipant",
            //    data: myformdata,
            //    success: function (result) {

                  

            //    }

            //})
            return false;
        })
        $("#deleteUserButton").click(function (e) {
            debugger;
            alert("deleted");
            
        })
        });

    $("#questionnaire_Name").autocomplete({
        source: function (request, response) {
            var customer = new Array();
            $.ajax({
                async: false,
                cache: false,
                type: "POST",
                url: "@(Url.Action("Autocomplete", "MySurvey"))",
                data: { "term": request.term  },
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        customer[i] = { label: data[i].Name, Id: data[i].QAID };
                    }
                    debugger;
                }
            });
            response(customer);
        },
         select: function (event, ui) {
             //fill selected customer details on form
             $.ajax({
                 cache: false,
                 type: "POST",
                 url: "@(Url.Action("GetDetail", "MySurvey"))",
                data: { "id": ui.item.Id },

                success: function (data) {

                    //var newElement = '<a href="#" class="btn btn-danger" onclick="ConfirmDelete(data.questionnaires["0"].QAID)" id="deleteButton"><i class="glyphicon glyphicon-trash"></i></a>';

                    var newElement = '<a href="#" class="btn btn-danger" ><i class="glyphicon glyphicon-trash"></i></a>';

                    $('#mytable').append(
                        $('<tr></tr>').append(
                            $('<td></td>').html(data.questionnaires["0"].Name),
                            $('<td></td>').html(data.questionnaires["0"].Comment),
                            $('<td></td>').html(newElement),
                            $('<td></td>').html()
                        )
                    )

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        }
     });



    //$("#addQuestionnairetoSurvey").click(function () {
    //    var myformdata = $("#searchInput").serialize();
    //            $.ajax({
    //                type: "POST",
    //                url: "/MySurvey/AddQuestionnairetoSurvey",
    //                data: myformdata,
    //                success: function (result) {

    //                   // $("#AddParticipantsmodel").modal('hide');
    //                   // window.location = window.location;
    //                    debugger
    //                    //$("#mytable").append(result.Userslist);

    //                }

    //            })

    //        })
    </script>
